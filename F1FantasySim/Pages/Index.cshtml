@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<body>
    <form method="post">
        <label>Max Budget</label>
        <input asp-for="MaxBudget" /><br /><br />

        <div class="tables-container" style="display: flex; justify-content: space-around;">
            
            <!-- Qualifying Results Table -->
            <div class="col-md-3">
                <h2 class="table-heading" style="text-align: center;">Qualifying</h2> <!-- This is the new heading for Qualifying -->
                <table class="table table-light table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Position</th> <!-- New Position Column -->
                            <th>Name</th>
                            <th>Team</th>
                            <th>OverallPoints</th>
                            <th>Value</th>
                            <th>PPM</th>
                        </tr>
                    </thead>
                    <tbody id="sortable-qualifying">
                        @foreach (var obj in Model.Drivers)
                        {
                            <tr class="list-item" id="q-@obj.PlayerId">
                                <td class="position"></td> <!-- Placeholder for position value -->
                                <td width="50%">@obj.DisplayName<input type="hidden" name="qualifyingIds" value="@obj.PlayerId"></td>
                                <td width="20%">@obj.TeamName</td>
                                <td width="20%">@obj.OverallPpints</td>
                                <td width="20%">@obj.Value</td>
                                <td width="20%">@{
                                        var pointsPerMillion = obj.Value > 0 ? @obj.PointsPerMill.ToString("F2") : "N/A";
                                    }@pointsPerMillion</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Race Results Table (Existing Table) -->
            <div class="col-md-3">
                <h2 class="table-heading" style="text-align: center;">Race</h2> <!-- This is the new heading for Race -->
                <table class="table table-light table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Position</th> <!-- New Position Column -->
                            <th>Name</th>
                            <th>Team</th>
                            <th>OverallPoints</th>
                            <th>Value</th>
                            <th>PPM</th>
                        </tr>
                    </thead>
                    <tbody id="sortable">
                        @foreach (var obj in Model.Drivers)
                        {
                            <tr class="list-item" id="@obj.PlayerId">
                                <td class="position"></td> <!-- Placeholder for position value -->
                                <td width="50%">@obj.DisplayName<input type="hidden" name="ids" value="@obj.PlayerId"></td>
                                <td width="20%">@obj.TeamName</td>
                                <td width="20%">@obj.OverallPpints</td>
                                <td width="20%">@obj.Value</td>
                                <td width="20%">@{var pointsPerMillion = obj.Value > 0 ? @obj.PointsPerMill.ToString("F2") : "N/A";}@pointsPerMillion</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>

        <input class="text-left btn btn-primary" type="submit" value="Submit" />
        <br />

        @if (Model.BestTeams != null && Model.BestTeams.Any())
        {
            <div>
                <br />
                <div class="col-md-10">
                    <table class="d-lg-table table table-light table-bordered">
                        <thead class="thead-dark">
                            <tr>
                                <th colspan="5">Drivers</th>
                                <th colspan="3">Constructors</th>
                                <th>Points</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var team in Model.BestTeams)
                            {
                                <tr>
                                    @foreach (var driver in team.Drivers.Where(a => !a.ApiModel.IsConstructor()))
                                    {
                                        <td width="15%">
                                            @{
                                                string tooltip = $"Qualifying: {driver.Points.QualifyingPoints}&lt;br&gt;" +
                                                $"Race: {driver.Points.RacePoints}&lt;br&gt;" +
                                                $"Overtaking: {driver.Points.OvertakingPoints}";
                                                string txt = $"{driver.ApiModel.LastName} [{driver.Points.TotalPoints}]";
                                            }
                                            <!-- Here we use data-toggle and data-html to create a tooltip that renders HTML -->
                                            <span data-toggle="tooltip" data-html="true" title="@Html.Raw(tooltip)">
                                                @txt
                                            </span>
                                            @if (driver.IsTurboed)
                                            {
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-lightning" viewBox="0 0 16 16">
                                                    <span class="turbo-icon">⚡</span>
                                                </svg>
                                            }
                                            <text>&nbsp;</text>
                                        </td>
                                    }
                                    @foreach (var constructor in team.Constructors)
                                    {
                                        string constructorTooltip = $"Qualifying: {constructor.Points.QualifyingPoints}&lt;br /&gt;" +
                                                                    $"Race: {constructor.Points.RacePoints}&lt;br /&gt;" +
                                                                    $"Overtaking: {constructor.Points.OvertakingPoints}";
                                        string constructorName = constructor.ApiModel.FullName;
                                        string constructorPoints = $"[{constructor.Points.TotalPoints}]";
                                    
                                        <td>
                                            <span data-toggle="tooltip" data-html="true" title="@Html.Raw(constructorTooltip)">
                                                @constructorName @constructorPoints
                                            </span>
                                        </td>
                                    }
                                    <td>@team.Points</td>
                                    <td>@team.Price.ToString("F1")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>




                <!-- New Detailed Points Breakdown Tables -->
                <h2 class="table-heading">Detailed Points Breakdown</h2>

                <!-- Drivers Breakdown -->
                <h3 class="subheading">Drivers</h3>
                <table class="table table-light table-striped">
                    <thead>
                        <tr>
                            <th>Driver</th>
                            <th>Points Breakdown</th>
                            <th>Total Points</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var driver in Model.DriverPoints)
                        {
                            <tr>
                                <td>@driver.ApiModel.DisplayName</td>
                                    <td>
                                        <span data-toggle="tooltip" data-html="true"
                                              title="@($"Qualifying: {driver.Points.QualifyingPoints}<br />Race: {driver.Points.RacePoints}<br />Overtaking: {driver.Points.OvertakingPoints}")">
                                            @driver.Points.QualifyingPoints
                                        </span>
                                    </td>
                                <td>@driver.Points.TotalPoints</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <!-- Constructors Breakdown -->
                <h3 class="subheading">Constructors</h3>
                <table class="table table-light table-striped">
                    <thead>
                        <tr>
                            <th>Constructor</th>
                            <th>Points Breakdown</th>
                            <th>Total Points</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var constructor in Model.ConstructorPoints)
                        {
                            <tr>
                                <td>@constructor.ApiModel.DisplayName</td>
                                    <td>
                                        <span data-toggle="tooltip" data-html="true"
                                              title="@($"Qualifying: {constructor.Points.QualifyingPoints}<br />Race: {constructor.Points.RacePoints}<br />Overtaking: {constructor.Points.OvertakingPoints}")">
                                            @constructor.Points.QualifyingPoints
                                        </span>
                                    </td>
                                <td>@constructor.Points.TotalPoints</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </form>
</body>

@section Scripts{
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.24/themes/smoothness/jquery-ui.css" />
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.24/jquery-ui.min.js"></script>
<script type="text/javascript">
        $(function () {
            var fixHelperModified = function (e, tr) {
                var $originals = tr.children();
                var $helper = tr.clone();
                $helper.children().each(function (index) {
                    $(this).width($originals.eq(index).width())
                });
                return $helper;
            };

            $(document).ready(function () {
                $('[data-toggle="tooltip"]').tooltip();
            });


            $('[data-toggle="tooltip"]').tooltip({
                html: true, // Allow HTML in the tooltip
            });


            var updatePositions = function (selector) {
                $(selector).each(function (index) {
                    $(this).children('.position').html(index + 1);
                });
            };

            // Initialize sortable and update positions for the race results table
            $("#sortable").sortable({
                helper: fixHelperModified,
                cancel: ".ui-state-disabled",
                items: "tr:not(.ui-state-disabled)",
                update: function (event, ui) {
                    updatePositions("#sortable .list-item");
                }
            }).disableSelection();

            // Initialize sortable and update positions for the qualifying results table
            $("#sortable-qualifying").sortable({
                helper: fixHelperModified,
                cancel: ".ui-state-disabled",
                items: "tr:not(.ui-state-disabled)",
                update: function (event, ui) {
                    updatePositions("#sortable-qualifying .list-item");
                }
            }).disableSelection();

            // Initial position numbers
            updatePositions("#sortable .list-item");
            updatePositions("#sortable-qualifying .list-item");
        });
</script>
}
<style>
    .table {
        width: 100%; /* Full width of the container */
        table-layout: auto; /* Adjust to 'auto' for automatic column sizing */
    }

        .table th, .table td {
            white-space: nowrap; /* Prevent wrapping */
            overflow: hidden; /* Hide overflow */
            text-overflow: ellipsis; /* Add ellipsis for overflowed content */
            padding: 8px; /* Adjust padding as needed */
        }

            /* Specific column width adjustments */
            .table th.position, .table td.position { /* Smaller width for Position column */
                width: 10%;
                max-width: 10%; /* Or set a fixed width if preferred */
                min-width: 30px; /* Minimum width */
            }

            .table th:nth-child(2), .table td:nth-child(2) { /* Larger width for Name column */
                width: 25%;
                max-width: 25%; /* Or set a fixed width if preferred */
                min-width: 100px; /* Minimum width */
            }

            .table th:nth-child(3), .table td:nth-child(3) { /* Adjust width for Team column */
                width: 20%;
                max-width: 20%; /* Or set a fixed width if preferred */
                min-width: 80px; /* Minimum width */
            }

            .table th:nth-child(4), .table td:nth-child(4), /* Width for OverallPoints column */
            .table th:nth-child(5), .table td:nth-child(5), /* Width for Value column */
            .table th:nth-child(6), .table td:nth-child(6) { /* Width for PPM column */
                width: 15%;
                max-width: 15%; /* Or set a fixed width if preferred */
                min-width: 50px; /* Minimum width */
            }

    .table-heading {
        width: 100%; /* Full width of the container */
        text-align: center;
        font-size: 24px; /* Adjust size as needed */
        margin-bottom: 10px; /* Space below the heading */
    }

    .tables-container {
        display: flex;
        justify-content: center;
        align-items: flex-start; /* this makes sure they align to the top */
        gap: 20px; /* Adjust the space between the tables */
        margin: 0 auto; /* Center the container */
    }

</style>
